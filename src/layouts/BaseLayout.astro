---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import type { MarkdownLayoutProps } from 'astro';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  // https://docs.astro.build/en/core-concepts/layouts/#using-one-layout-for-md-mdx-and-astro
  frontmatter?: MarkdownLayoutProps<Props>['frontmatter'];
}

const isMarkdown = Astro.props.frontmatter !== undefined;

const { title, description, image } = Astro.props.frontmatter || Astro.props;
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
  }
</script>

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={image} />
  </head>
  <body>
    <Header />
    <main class:list={[{ 'prose prose-hr:my-5': isMarkdown }]}>
      <slot />
    </main>
  </body>
</html>
